{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","arr","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","images","downsized_medium","title","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGift","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,sBAAMC,SATa,SAAAC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC7BR,GAAc,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OAExCN,EAAc,KAId,SACE,uBACEO,KAAK,OACLC,YAAY,qCACZC,MAAQV,EACRW,SAlBoB,SAAAR,GACxBF,EAAcE,EAAES,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,0DAC2CC,UAAUH,GADrD,sDAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLC,GAAID,EAAIC,GACRT,IAAKQ,EAAIE,OAAOC,iBAAiBX,IACjCY,MAAOJ,EAAII,UATM,kBAadN,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBD,EAAiB,EAAjBA,MAAOZ,EAAU,EAAVA,IACnC,OACE,sBAAKc,UAAU,2CAAf,UACE,qBAAKA,UAAU,cAAf,SACE,4BAAKF,MAGP,qBAAKE,UAAU,YAAf,SACE,qBAAKC,IAAMf,EAAMgB,IAAMJ,UCNlBK,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECF0B,SAAAA,GAC1B,MAA0Bf,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAK,SAAAC,GAEFH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAIhB,CAAEpB,IAEEqB,EDhBmBK,CAAa1B,GAA/BO,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAEd,OACE,qCACE,oBAAIJ,UAAU,kBAAd,SAAkChB,IAElC,sBAAKgB,UAAU,iBAAf,UACII,GAAW,mBAAGJ,UAAU,UAAb,qCAGXT,EAAKE,KAAI,SAACkB,GAAD,OACP,cAAC,EAAD,eAEMA,GADCA,EAAMhB,cE+BViB,EA5CM,WACnB,MAAoC3C,mBAAS,CAAC,gBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACE,sBAAKgC,UAAU,MAAf,UACE,mCACE,oBAAIA,UAAU,aAAd,0BAEA,qBAAKA,UAAU,mBAAf,SACE,wLAMF,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,CAAahC,cAAgBA,SAIjC,qBAAKgC,UAAU,iBAEf,+BACE,qBAAKA,UAAU,eAAf,SACE,6BAEIa,EAAWpB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAWA,GADLA,YASlB,iCACI,mBAAGgB,UAAU,iBAAb,+E,MCrCVc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bff141ee.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = e => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(arr => [ inputValue, ...arr ]);\r\n    }\r\n    setInputValue('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Busca todos los GIFs que te gusten\" \r\n        value={ inputValue } \r\n        onChange={ handleInputChange } />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI(category) }&api_key=RW3UBtSce8LfJ61PMQ6byWamshcuTJzf`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(gif => {\r\n    return {\r\n      id: gif.id,\r\n      url: gif.images.downsized_medium.url,\r\n      title: gif.title,\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInUp\">\r\n      <div className=\"card__title\">\r\n        <p>{ title }</p>\r\n      </div>\r\n      \r\n      <div className=\"card__img\">\r\n        <img src={ url } alt={ title }></img>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGift } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGift(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"category__title\">{ category }</h3>\r\n\r\n      <div className=\"category__grid\">\r\n        { loading && <p className=\"loading\">Cargando imágenes...</p> }\r\n\r\n        {\r\n          data.map((image) => (\r\n            <GifGridItem\r\n              key={image.id}\r\n              {...image}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGift = category => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(imgs => {\r\n\r\n          setState({\r\n            data: imgs,\r\n            loading: false,\r\n          });\r\n        \r\n      });\r\n  }, [ category ]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['Programming']);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header>\r\n        <h2 className=\"app__title\">GifExpertApp</h2>\r\n\r\n        <div className=\"app__description\">\r\n          <p>\r\n            Todos los GIFs que tanto te gustan al alcance de tus manos. Hay cientos de miles\r\n            esperándote para que puedas compartir con tus amigos al instante.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"app__search\">\r\n          <AddCategory setCategories={ setCategories } />\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"colorful-bar\"></div>\r\n\r\n      <main>\r\n        <div className=\"app__content\">\r\n          <ol>\r\n            {\r\n              categories.map(category => (\r\n                <GifGrid \r\n                  key={ category } \r\n                  category={ category } \r\n                />\r\n              ))\r\n            }\r\n          </ol>\r\n        </div>\r\n      </main>\r\n\r\n      <footer>\r\n          <p className=\"app__copyright\">© 2021 - Bruno Pittilini. Todos los derechos reservados.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}